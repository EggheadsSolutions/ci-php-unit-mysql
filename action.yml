name: 'PHP Unit MySQL'
description: 'PHP Unit Test'

inputs:
  name-compose-file:
    description: 'Name Docker-compose file'
    required: true
    default: 'docker-unittest.yml'

  docker-user:
    description: 'Docker User'
    required: true
    default: 'www-data'

  config-file:
    description: 'Path to phpunit.xml'
    required: true
    default: 'phpunit.xml.dist'

  migrate-command:
    description: 'Migrate command'
    required: false
    default: 'vendor/bin/phinx'

  post-install-cmd:
    description: 'Composer Post Install CMD'
    required: false
    default: 'yes'

  additional-parameters:
    description: 'Additional parameters for the phpunit command'
    required: true
    default: ''

  config-dir:
    description: 'Config directory for app-local.php'
    required: false
    default: 'config'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - name: Setup config
      run: mv ./${{ inputs.config-dir }}/app_local_ci.php ./${{ inputs.config-dir }}/app_local.php
      shell: bash

    - name: Rename Docker-compose
      run: mv ${{ inputs.name-compose-file }} ${GITHUB_SHA}.yml
      shell: bash

    - name: Rename Services
      run: |
        sed -i 's/  php:/  php-\'${RUNNER_NAME}\':/g' ${GITHUB_SHA}.yml
        sed -i 's/  mysql:/  mysql-\'${RUNNER_NAME}\':/g' ${GITHUB_SHA}.yml
      shell: bash

    - name: cat
      run: cat ${GITHUB_SHA}.yml
      shell: bash

    - name: run docker-compose
      run: docker-compose -f ${GITHUB_SHA}.yml up --no-recreate --build -d
      shell: bash

    - name: Wait run mysql
      run: sleep 20
      shell: bash

    - name: Composer Install
      run: docker-compose -f ${GITHUB_SHA}.yml exec -T -u ${{ inputs.docker-user }} php-${RUNNER_NAME} composer install --no-progress --prefer-dist --optimize-autoloader
      shell: bash

    - name: Post Install dependencies
      if: ${{ inputs.post-install-cmd == 'yes' }}
      run: docker-compose -f ${GITHUB_SHA}.yml exec -T -u ${{ inputs.docker-user }} php-${RUNNER_NAME} composer run-script post-install-cmd --no-interaction
      shell: bash

    - name: Migrations
      if: ${{ inputs.migrate-command != 'no' }}
      run: |
        docker-compose -f ${GITHUB_SHA}.yml exec -T -u ${{ inputs.docker-user }} php-${RUNNER_NAME} ${{ inputs.migrate-command }} migrate 2> /dev/null && echo 'skip'
        docker-compose -f ${GITHUB_SHA}.yml exec -T -u ${{ inputs.docker-user }} php-${RUNNER_NAME} ${{ inputs.migrate-command }} migrate
      shell: bash

    - name: PHPUnit
      run: docker-compose -f ${GITHUB_SHA}.yml exec -u ${{ inputs.docker-user }} -T php-${RUNNER_NAME} php -dxdebug.mode=develop vendor/bin/phpunit --colors=always -c ${{ inputs.config-file }} ${{ inputs.additional-parameters }}
      shell: bash

    - name: Destroy docker
      if: always()
      run: docker-compose -f ${GITHUB_SHA}.yml down -v
      shell: bash